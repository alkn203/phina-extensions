{"version":3,"sources":["gulp-jsdoc.js"],"names":["os","require","type","debug","jsdoc","config","done","files","jsdocConfig","arguments","length","undefined","JSON","stringify","file","callback","push","path","on","Promise","resolve","reject","jsdocConfigClone","parse","source","include","concat","Object","assign","errMsg","fancyLog","error","Error","tmpobj","tmp","fileSync","join","fs","writeFile","name","err","spawn","cmd","inkdocstrap","dirname","args","opts","template","templates","default","layoutFile","child","process","execPath","cwd","stdout","setEncoding","stderr","data","code","then","catch"],"mappings":"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","sourcesContent":["import map from 'map-stream';\nimport tmp from 'tmp';\nimport fs from 'fs';\nimport path from 'path';\nimport fancyLog from 'fancy-log';\nimport beeper from 'beeper';\nlet os = require('os').type();\n\nlet debug = require('debug')('gulp-jsdoc3');\n\n/**\n * @callback gulpDoneCallback\n */\n\n/**\n * A wrapper around jsdoc cli.\n *\n * This function collects all filenames. Then runs:\n * ```jsdoc -c config -t node_modules/ink-docstrap/template gulpFile1 gulpFile2```\n * @example\n * gulp.src(['README.md', 'src/*.js']), {read: false}).pipe(\n *     jsdoc(options, cb)\n * );\n *\n * @param {Object} [config=require('./jsdocConfig.json')]\n * @param {gulpDoneCallback} done\n * @returns {*|SignalBinding}\n */\nexport function jsdoc(config, done) {\n    let files = [];\n    let jsdocConfig;\n\n    // User just passed callback\n    if (arguments.length === 1 && typeof config === 'function') {\n        done = config;\n        config = undefined;\n    }\n\n    // Prevent some errors\n    if (typeof done !== 'function') {\n        done = function () {\n        };\n    }\n\n    jsdocConfig = config || require('./jsdocConfig.json');\n\n    debug('Config:\\n' + JSON.stringify(jsdocConfig, undefined, 2));\n\n    return map(function (file, callback) {\n        files.push(file.path);\n        callback(null, file);\n    }).on('end', function () {\n        // We use a promise to prevent multiple dones (normal cause error then close)\n        new Promise(function (resolve, reject) {\n            // We clone the config file so as to not affect the original\n            let jsdocConfigClone = JSON.parse(JSON.stringify(jsdocConfig));\n            // If the user has specified a source.include key, we append the\n            // gulp.src files to it.\n            if (jsdocConfigClone.source && jsdocConfigClone.source.include) {\n                jsdocConfigClone.source.include =\n                    jsdocConfigClone.source.include.concat(files);\n            } else {\n                jsdocConfigClone = Object.assign(jsdocConfigClone,\n                    { source: { include: files } });\n            }\n\n            if (jsdocConfigClone.source.include.length === 0) {\n                const errMsg = 'JSDoc Error: no files found to process';\n                fancyLog.error(errMsg);\n                beeper();\n                reject(new Error(errMsg));\n                return;\n            }\n\n            const tmpobj = tmp.fileSync();\n            debug('Documenting files: ' + jsdocConfigClone.source.include.join(' '));\n            fs.writeFile(tmpobj.name, JSON.stringify(jsdocConfigClone), 'utf8', function (err) {\n                // We couldn't write the temp file\n                /* istanbul ignore next */\n                if (err) {\n                    reject(err);\n                    return;\n                }\n\n                const spawn = require('child_process').spawn,\n                    cmd = require.resolve('jsdoc/jsdoc.js'), // Needed to handle npm3 - find the binary anywhere\n                    inkdocstrap = path.dirname(require.resolve('ink-docstrap'));\n\n                let args = ['-c', tmpobj.name];\n\n                // Config + ink-docstrap if user did not specify their own layout or template\n                if (!(jsdocConfigClone.opts &&\n                    jsdocConfigClone.opts.template) && !(jsdocConfigClone.templates &&\n                    jsdocConfigClone.templates.default &&\n                    jsdocConfigClone.templates.default.layoutFile)) {\n                    args = args.concat(['-t', inkdocstrap]);\n                }\n\n                debug(cmd + ' ' + args.join(' '));\n\n                const child = os === 'Windows_NT'\n                    ? spawn(process.execPath, [cmd].concat(args), {cwd: process.cwd()})\n                    : spawn(cmd, args, {cwd: process.cwd()}); // unix\n                child.stdout.setEncoding('utf8');\n                child.stderr.setEncoding('utf8');\n                /* istanbul ignore next */\n                child.stdout.on('data', function (data) {\n                    fancyLog(data);\n                });\n                /* istanbul ignore next */\n                child.stderr.on('data', function (data) {\n                    fancyLog.error(data);\n                    beeper();\n                });\n                child.on('close', function (code) {\n                    if (code === 0) {\n                        fancyLog('Documented ' +\n                                 jsdocConfigClone.source.include.length + ' ' +\n                                 ( jsdocConfigClone.source.include.length === 1 ? 'file!' : 'files!' )\n                        );\n                        resolve();\n                    } else {\n                        fancyLog.error('JSDoc returned with error code: ' + code);\n                        beeper();\n                        reject(new Error('JSDoc closed with error code: ' + code));\n                    }\n                });\n                child.on('error', function (error) {\n                    fancyLog.error('JSDoc Error: ' + error);\n                    beeper();\n                    reject(new Error(error));\n                });\n            });\n        }).then((data) => done(undefined, data)).catch((err) => done(err));\n    });\n}\n"],"file":"gulp-jsdoc.js"}